{
  "extends": [
    "plugin:@nx/react-typescript",
    "next",
    "next/core-web-vitals",
    "../../.eslintrc.json"
  ],
  "ignorePatterns": ["!**/*", ".next/**/*", "**/ui/*"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "@next/next/no-html-link-for-pages": ["error", "apps/musidle-frontend/pages"]
      }
    },
    {
      "files": ["*.ts", "*.tsx"],

      "rules": {
        "@typescript-eslint/naming-convention": [
          "error",
          { "selector": "variable", "format": ["camelCase"] },
          { "selector": "function", "format": ["camelCase", "PascalCase"] },
          { "selector": "parameter", "format": ["camelCase"], "leadingUnderscore": "allow" },
          { "selector": "memberLike", "format": ["camelCase"], "leadingUnderscore": "allow" },
          { "selector": "typeParameter", "format": ["PascalCase"], "prefix": ["T"] },
          { "selector": "objectLiteralProperty", "format": null },
          {
            "selector": "interface",
            "format": ["PascalCase"],
            "custom": { "regex": "^I[A-Z]", "match": true }
          },
          {
            "selector": "typeAlias",
            "format": ["PascalCase"],
            "custom": { "regex": "^I[A-Z]", "match": true }
          },
          { "selector": "enum", "format": ["PascalCase"] }
        ]
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "rules": {}
    }
  ],
  "rules": {
    "@next/next/no-html-link-for-pages": "off",
    "react-hooks/exhaustive-deps": "off",
    "@typescript-eslint/no-empty-interface": "off"
  },
  "env": {
    "jest": true
  }
}
